{"version":3,"sources":["components/Dialogs/Dialogs.module.css","img/ava.jpg","../node_modules/@ant-design/icons-svg/es/asn/SendOutlined.js","../node_modules/@ant-design/icons/es/icons/SendOutlined.js","components/Dialogs/Dialogs.tsx","components/Dialogs/DialogsContainer.tsx"],"names":["module","exports","SendOutlined","props","ref","React","AntdIcon","Object","assign","icon","SendOutlinedSvg","displayName","DialogItem","path","id","className","s","item","to","src","alt","storyItem","name","Message","avatar","text","message","maxLength100","maxLengthCreator","AddMessageReduxForm","reduxForm","form","add","onSubmit","handleSubmit","Field","component","Textarea","textarea","placeholder","validate","required","style","marginLeft","marginTop","type","htmlType","Dialogs","state","dialogsPage","dialogsElements","dialogsData","map","names","toString","messageElements","messageData","messages","content","dialog_wrapper","messages_items","values","addMessage","newMessageText","dialog_items","storiesTitle","compose","connect","dispatch","addMessageAC","withAuthRedirect"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,eAAiB,gCAAgC,KAAO,sBAAsB,aAAe,8BAA8B,UAAY,2BAA2B,KAAO,sBAAsB,eAAiB,gCAAgC,aAAe,8BAA8B,cAAgB,+BAA+B,SAAW,0BAA0B,IAAM,uB,6FCD1X,MAA0B,gC,4CCE1BC,EADI,CAAE,KAAQ,CAAE,IAAO,MAAO,MAAS,CAAE,QAAW,gBAAiB,UAAa,SAAW,SAAY,CAAC,CAAE,IAAO,OAAQ,MAAS,GAAI,SAAY,CAAC,CAAE,IAAO,QAAS,MAAS,MAAS,CAAE,IAAO,OAAQ,MAAS,CAAE,EAAK,mZAAuZ,KAAQ,OAAQ,MAAS,Y,OCKrpBA,EAAe,SAAsBC,EAAOC,GAC9C,OAAoBC,gBAAoBC,IAAUC,OAAOC,OAAO,GAAIL,EAAO,CACzEC,IAAKA,EACLK,KAAMC,MAIVR,EAAaS,YAAc,eACCN,mBAAiBH,GCOhCU,EAAa,SAACT,GACvB,IAAIU,EAAO,YAAcV,EAAMW,GAC/B,OACI,sBAAKC,UAAWC,IAAEC,KAAlB,UACI,qBAAKF,UAAU,MAAf,SACI,cAAC,IAAD,CAASG,GAAIL,EAAb,SAAmB,qBAAKM,IAAK,+DACLC,IAAI,SAASL,UAAWC,IAAEK,gBAEtD,qBAAKN,UAAU,OAAf,SACI,cAAC,IAAD,CAASA,UAAWC,IAAEK,UAAWH,GAAIL,EAArC,SAA4CV,EAAMmB,aAK5DC,EAAU,SAACpB,GACb,OACI,sBAAKY,UAAWC,IAAEC,KAAlB,UACI,qBAAKF,UAAU,MAAf,SACI,qBAAKI,IAAKK,EAAQJ,IAAI,aAE1B,qBAAKL,UAAWC,IAAES,KAAlB,SACI,qBAAKV,UAAWC,IAAEU,QAAlB,SAA4BvB,EAAMuB,gBAiD5CC,EAAeC,YAAiB,KAmBhCC,EAAsBC,YAAkC,CAACC,KAAM,wBAAzCD,EAjBgD,SAAC3B,GACzE,OACI,uBAAMY,UAAWC,IAAEgB,IAAKC,SAAU9B,EAAM+B,aAAxC,UACI,cAACC,EAAA,EAAD,CACIC,UAAWC,IACXf,KAAM,iBACNP,UAAWC,IAAEsB,SACbC,YAAa,qBACbC,SAAU,CAACC,IAAUd,KAEzB,cAAC,IAAD,CAAQe,MAAO,CAACC,WAAY,OAAQC,UAAW,QACvCC,KAAM,UAAWC,SAAU,SAC3BrC,KAAM,cAAC,EAAD,YAQXsC,EAzDc,SAAC5C,GAE1B,IAAI6C,EAAQ7C,EAAM8C,YACdC,EAAkBF,EAAMG,YAAYC,KAAI,SAACC,GAAD,OACxC,cAAC,EAAD,CAAYvC,GAAIuC,EAAMvC,GAAGwC,WAAYhC,KAAM+B,EAAM/B,MAAW+B,EAAMvC,OAGlEyC,EAAkBP,EAAMQ,YAAYJ,KAAI,SAACK,GAAD,OACxC,cAAC,EAAD,CAAS3C,GAAI2C,EAAS3C,GAAGwC,WAAY5B,QAAS+B,EAAS/B,SAAc+B,EAAS3C,OAOlF,OACI,qBAAKC,UAAWC,IAAE0C,QAAlB,SACI,sBAAK3C,UAAWC,IAAE2C,eAAlB,UACI,sBAAK5C,UAAWC,IAAE4C,eAAlB,UACKL,EACD,cAAC1B,EAAD,CAAqBI,SATjB,SAAC4B,GACjB1D,EAAM2D,WAAWD,EAAOE,sBAUhB,sBAAKhD,UAAWC,IAAEgD,aAAlB,UACI,oBAAIjD,UAAWC,IAAEiD,aAAjB,qBACCf,W,yBCvDNgB,sBACXC,aAhBkB,SAACnB,GACnB,MAAO,CACHC,YAAaD,EAAMC,YACnBc,eAAgBf,EAAMC,gBAIL,SAACmB,GACtB,MAAO,CACHN,WAAY,SAACC,GACTK,EAASC,YAAaN,SAO9BO,IAFWJ,CAGbnB","file":"static/js/5.e121b890.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog_wrapper\":\"Dialogs_dialog_wrapper__1QhyA\",\"item\":\"Dialogs_item__7WdNR\",\"storiesTitle\":\"Dialogs_storiesTitle__2XjiT\",\"storyItem\":\"Dialogs_storyItem__2UnvB\",\"text\":\"Dialogs_text__30V38\",\"messages_items\":\"Dialogs_messages_items__2yo5v\",\"dialog_items\":\"Dialogs_dialog_items__3Kssj\",\"addMessageBtn\":\"Dialogs_addMessageBtn__2dPqI\",\"textarea\":\"Dialogs_textarea__1O3QX\",\"add\":\"Dialogs_add__wOS1P\"};","export default __webpack_public_path__ + \"static/media/ava.323d81be.jpg\";","// This icon file is generated automatically.\nvar SendOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"defs\", \"attrs\": {}, \"children\": [{ \"tag\": \"style\", \"attrs\": {} }] }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M931.4 498.9L94.9 79.5c-3.4-1.7-7.3-2.1-11-1.2a15.99 15.99 0 00-11.7 19.3l86.2 352.2c1.3 5.3 5.2 9.6 10.4 11.3l147.7 50.7-147.6 50.7c-5.2 1.8-9.1 6-10.3 11.3L72.2 926.5c-.9 3.7-.5 7.6 1.2 10.9 3.9 7.9 13.5 11.1 21.5 7.2l836.5-417c3.1-1.5 5.6-4.1 7.2-7.1 3.9-8 .7-17.6-7.2-21.6zM170.8 826.3l50.3-205.6 295.2-101.3c2.3-.8 4.2-2.6 5-5 1.4-4.2-.8-8.7-5-10.2L221.1 403 171 198.2l628 314.9-628.2 313.2z\" } }] }, \"name\": \"send\", \"theme\": \"outlined\" };\nexport default SendOutlined;\n","// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport SendOutlinedSvg from \"@ant-design/icons-svg/es/asn/SendOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar SendOutlined = function SendOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, Object.assign({}, props, {\n    ref: ref,\n    icon: SendOutlinedSvg\n  }));\n};\n\nSendOutlined.displayName = 'SendOutlined';\nexport default /*#__PURE__*/React.forwardRef(SendOutlined);","import React, {FC} from \"react\";\r\nimport s from './Dialogs.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport avatar from './../../img/ava.jpg'\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport Textarea from \"../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\nimport {dialogsDataType, dialogsPageType, messageDataType} from \"../../types/types\";\r\nimport {Button} from \"antd\";\r\nimport {SendOutlined} from \"@ant-design/icons\";\r\n\r\ntype DialogItemType = {\r\n    name: string\r\n    id: string\r\n}\r\ntype MessageType = {\r\n    message: string\r\n    id: string\r\n}\r\n\r\n//TODO верстка\r\nexport const DialogItem = (props: DialogItemType) => {\r\n    let path = \"/dialogs/\" + props.id\r\n    return (\r\n        <div className={s.item}>\r\n            <div className=\"img\">\r\n                <NavLink to={path}><img src={'https://miro.medium.com/max/720/1*W35QUSvGpcLuxPo3SRTH4w.png'}\r\n                                        alt='avatar' className={s.storyItem}/></NavLink>\r\n            </div>\r\n            <div className=\"text\">\r\n                <NavLink className={s.storyItem} to={path}>{props.name}</NavLink>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nconst Message = (props: MessageType) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <div className=\"img\">\r\n                <img src={avatar} alt='avatar'/>\r\n            </div>\r\n            <div className={s.text}>\r\n                <div className={s.message}>{props.message}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\ntype Dialogs = {\r\n    updateNewMessage: (text: string) => void\r\n    addMessage: (newMessageText: string) => void\r\n    dialogsPage: dialogsPageType\r\n    newMessageText: string\r\n}\r\n\r\nconst Dialogs: FC<Dialogs> = (props) => {\r\n\r\n    let state = props.dialogsPage\r\n    let dialogsElements = state.dialogsData.map((names: dialogsDataType) =>\r\n        <DialogItem id={names.id.toString()} name={names.name} key={names.id}/>\r\n    )\r\n\r\n    let messageElements = state.messageData.map((messages: messageDataType) =>\r\n        <Message id={messages.id.toString()} message={messages.message} key={messages.id}/>\r\n    )\r\n\r\n    let addNewMessage = (values: AddMessageFormDataType) => {\r\n        props.addMessage(values.newMessageText)\r\n    }\r\n\r\n    return (\r\n        <div className={s.content}>\r\n            <div className={s.dialog_wrapper}>\r\n                <div className={s.messages_items}>\r\n                    {messageElements}\r\n                    <AddMessageReduxForm onSubmit={addNewMessage}/>\r\n                </div>\r\n                <div className={s.dialog_items}>\r\n                    <h4 className={s.storiesTitle}>Friends</h4>\r\n                    {dialogsElements}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\ntype AddMessageFormDataType = {\r\n    newMessageText: string\r\n}\r\n\r\nconst maxLength100 = maxLengthCreator(100)\r\n\r\nconst AddMessageForm: React.FC<InjectedFormProps<AddMessageFormDataType>> = (props) => {\r\n    return (\r\n        <form className={s.add} onSubmit={props.handleSubmit}>\r\n            <Field\r\n                component={Textarea}\r\n                name={'newMessageText'}\r\n                className={s.textarea}\r\n                placeholder={'Enter your message'}\r\n                validate={[required, maxLength100]}\r\n            />\r\n            <Button style={{marginLeft: '15px', marginTop: '10px'}}\r\n                    type={\"primary\"} htmlType={\"submit\"}\r\n                    icon={<SendOutlined/>}/>\r\n        </form>\r\n    );\r\n};\r\n\r\nconst AddMessageReduxForm = reduxForm<AddMessageFormDataType>({form: 'dialogAddMessageForm'})(AddMessageForm)\r\n\r\n\r\nexport default Dialogs","import React from \"react\";\r\nimport {addMessageAC,} from \"../../redux/dialogs_reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../HOC/WithAuthRedirect\";\r\nimport {compose, Dispatch} from \"redux\";\r\nimport {reduxStoreType} from \"../../redux/redux_store\";\r\n\r\n//TODO типизация\r\n\r\nlet mapStateToProps = (state: reduxStoreType) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n        newMessageText: state.dialogsPage,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch: Dispatch) => {\r\n    return {\r\n        addMessage: (newMessageText: string) => {\r\n            dispatch(addMessageAC(newMessageText))\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs)"],"sourceRoot":""}