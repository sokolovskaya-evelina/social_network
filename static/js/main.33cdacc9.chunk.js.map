{"version":3,"sources":["components/Users/Users.module.css","components/Profile/My posts/MyPosts.module.css","components/Header/Header.module.css","components/common/Preloader/Preloader.module.css","components/Navbar/Navbar.module.css","components/Profile/Profile.module.css","components/Profile/My posts/Post/Post.module.css","components/Profile/My posts/ProfileInfo/ProfileInfo.module.css","api/api.ts","redux/profile_reducer.ts","redux/dialogs_reducer.ts","redux/users_reducer.ts","redux/auth_reducer.ts","redux/redux_store.ts","components/Navbar/Navbar.tsx","components/News/News.tsx","components/Music/Music.tsx","components/Settings/Settings.tsx","img/ava.jpg","components/Dialogs/Dialogs.tsx","HOC/WithAuthRedirect.tsx","components/Dialogs/DialogsContainer.tsx","assets/user.png","components/Users/Users.tsx","components/common/Preloader/Preloader.tsx","components/Users/UsersContainer.tsx","components/Profile/My posts/ProfileInfo/ProfileInfo.tsx","components/Profile/My posts/Post/Post.tsx","components/Profile/My posts/MyPosts.tsx","components/Profile/My posts/MyPostsContainer.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx","components/Header/Header.tsx","components/Header/HeaderContainer.tsx","components/Login/Login.tsx","App.tsx","reportWebVitals.ts","index.tsx","components/Dialogs/Dialogs.module.css"],"names":["module","exports","instance","axios","create","withCredentials","baseURL","headers","usersAPI","currentPage","pageSize","get","then","response","data","id","post","delete","profileAPI","userId","authAPI","ADD_POST","UPDATE_NEW_POST_TEXT","SET_USER_PROFILE","initialState","posts","likeCount","newPostText","profile","ProfileReducer","state","action","type","newPost","newText","ADD_MESSAGE","UPDATE_NEW_MESSAGE_TEXT","dialogsData","name","messageData","message","newMessageText","DialogsReducer","newMessage","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","users","totalUsersCount","isFetching","followingInProgress","toggleInFetching","toggleIsFollowingProgress","userID","UsersReducer","map","u","followed","count","filter","SET_USER_DATA","email","login","isAuth","AuthReducer","reducers","combineReducers","profilePage","dialogsPage","usersPage","auth","store","createStore","applyMiddleware","thunkMiddleware","window","Navbar","className","s","menuSidebar","user","src","alt","userAvatar","userName","navGroup","to","navLink","activeClassName","active","navIcon","navText","News","Music","Settings","DialogItem","props","path","item","storyItem","Message","avatar","text","Dialogs","dialogsElements","names","toString","messageElements","messages","content","dialog_wrapper","messages_items","add","textarea","onChange","e","currentTarget","value","updateNewMessage","addMessageBtn","onClick","addMessage","dialog_items","storiesTitle","mapStateToPropsForRedirect","withAuthRedirect","Component","RedirectComponent","this","React","connect","compose","dispatch","Users","pagesCount","Math","ceil","pages","i","push","paginationBlock","p","page","onPageChanged","userBlock","userInformation","userPhoto","photos","small","disabled","some","unfollow","followIcon","follow","userDescription","status","Preloader","loader","l_main","l_square","UsersContainer","pageNumber","getUsers","currentValue","unFollow","resultCode","setCurrentPages","items","totalCount","ProfileInfo","mainFeed","descriptionBlock","profileImage","large","description","descriptionTextName","fullName","descriptionText","aboutMe","lookingForAJob","lookingForAJobDescription","descriptionTextContacts","contacts","facebook","website","vk","instagram","youtube","github","mainLink","Post","postHeader","postInfo","href","postAuthor","postTimeInfo","postTime","settingIcon","postButton","postContainer","postText","massage","likes","likesCounter","postFooter","buttonIcon","MyPosts","postElements","createPost","createPostHeader","createPostTitle","createPostBody","createPostInput","createPostTextarea","updateNewPostText","createPostFooter","tag","addPost","tagIcon","MyPostsContainer","Profile","ProfileContainer","match","params","getProfilePage","withRouter","Header","header","searchForm","searchInput","placeholder","searchButton","navigation","HeaderContainer","getAuthUserData","setAuthUserData","Login","App","render","DialogsContainer","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rerenderEntireTree","ReactDOM","StrictMode","document","getElementById","subscribe"],"mappings":"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","file":"static/js/main.33cdacc9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"userBlock\":\"Users_userBlock__1ZOw8\",\"paginationBlock\":\"Users_paginationBlock__1s_rU\",\"page\":\"Users_page__2xW1u\",\"active\":\"Users_active__1Awjq\",\"userInformation\":\"Users_userInformation__3_JHM\",\"followButton\":\"Users_followButton__2_xmr\",\"followIcon\":\"Users_followIcon__2ZpsT\",\"userDescription\":\"Users_userDescription__3QZAl\",\"userPhoto\":\"Users_userPhoto__2qFpo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"createPost\":\"MyPosts_createPost__2ERVI\",\"createPostHeader\":\"MyPosts_createPostHeader__2byCM\",\"createPostTitle\":\"MyPosts_createPostTitle__34CmJ\",\"createPostBody\":\"MyPosts_createPostBody__9TTli\",\"userAvatar\":\"MyPosts_userAvatar__2sED_\",\"createPostInput\":\"MyPosts_createPostInput__3J8Nn\",\"createPostTextarea\":\"MyPosts_createPostTextarea__1iKV7\",\"createPostFooter\":\"MyPosts_createPostFooter__2bQEc\",\"tag\":\"MyPosts_tag__19I7U\",\"tagIcon\":\"MyPosts_tagIcon__14sD1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mMenu\":\"Header_mMenu__PaCxg\",\"m-menu\":\"Header_m-menu__H3JnU\",\"line\":\"Header_line__1r6hC\",\"header\":\"Header_header__1txZi\",\"headerBlock\":\"Header_headerBlock__1lC6G\",\"searchForm\":\"Header_searchForm__3IOWD\",\"searchInput\":\"Header_searchInput__FsbE6\",\"searchButton\":\"Header_searchButton__2oSK2\",\"navigation\":\"Header_navigation__8HjKc\",\"navigationPanel\":\"Header_navigationPanel__2xoTh\",\"navigationLink\":\"Header_navigationLink__39Rel\",\"user\":\"Header_user__3Sfq-\",\"userAvatar\":\"Header_userAvatar__34tSw\",\"userName\":\"Header_userName__3jbRx\",\"iconsPanel\":\"Header_iconsPanel__33G4z\",\"iconLink\":\"Header_iconLink__2p3FL\",\"iconImage\":\"Header_iconImage__2UouQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Preloader_loader__2V-fA\",\"l_main\":\"Preloader_l_main__1aNmO\",\"l_square\":\"Preloader_l_square__3FzAW\",\"animsquare1\":\"Preloader_animsquare1__2GhLM\",\"animsquare2\":\"Preloader_animsquare2__1Twf4\",\"animsquare3\":\"Preloader_animsquare3__R6SPH\",\"animsquare4\":\"Preloader_animsquare4__2FUcO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Navbar_container__3O8Hg\",\"menuSidebar\":\"Navbar_menuSidebar__2sifd\",\"user\":\"Navbar_user__3zcn5\",\"userAvatar\":\"Navbar_userAvatar__2hSG7\",\"userName\":\"Navbar_userName__2jcuR\",\"navGroup\":\"Navbar_navGroup__gfF2s\",\"navLink\":\"Navbar_navLink__gLwpo\",\"active\":\"Navbar_active__2uffa\",\"navText\":\"Navbar_navText__3QWMq\",\"navIcon\":\"Navbar_navIcon__2FkBq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainFeed\":\"Profile_mainFeed__2y9zO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__O3-2a\",\"postHeader\":\"Post_postHeader__sxT_Z\",\"user\":\"Post_user__lLhG7\",\"postButton\":\"Post_postButton__1VpHk\",\"userAvatar\":\"Post_userAvatar__1qmOD\",\"postInfo\":\"Post_postInfo__1IR28\",\"settingIcon\":\"Post_settingIcon__V0giw\",\"postAuthor\":\"Post_postAuthor__1qfuB\",\"postTime\":\"Post_postTime__3LZjV\",\"postTimeInfo\":\"Post_postTimeInfo__1seS8\",\"postText\":\"Post_postText__349sN\",\"postImage\":\"Post_postImage__3CNj-\",\"likes\":\"Post_likes__azh7m\",\"likesCounter\":\"Post_likesCounter__3DB4M\",\"postFooter\":\"Post_postFooter__3dfCi\",\"postButtonText\":\"Post_postButtonText__23N3L\",\"buttonIcon\":\"Post_buttonIcon__3uc6a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainFeed\":\"ProfileInfo_mainFeed__2Ed-6\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__ZSjQ5\",\"profileImage\":\"ProfileInfo_profileImage__3t8uw\",\"description\":\"ProfileInfo_description__26hxq\",\"descriptionTextName\":\"ProfileInfo_descriptionTextName__3Guai\",\"descriptionTextContacts\":\"ProfileInfo_descriptionTextContacts__2wS63\"};","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": \"fe3cd028-48b8-4f24-aace-482e17e6fa4c\"\r\n    }\r\n})\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage: number = 1, pageSize: number = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    follow(id: number = 2) {\r\n        return instance.post(`follow/${id}`)\r\n    },\r\n    unfollow(id: number = 2) {\r\n        return instance.delete(`follow/${id}`)\r\n    },\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId: number = 2) {\r\n        return instance.get(`profile/${userId}`)\r\n    },\r\n}\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`)\r\n    },\r\n}\r\n\r\n","import {AllActionsTypes} from \"./state\";\r\nimport {profileAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst UPDATE_NEW_POST_TEXT = \"UPDATE-NEW-POST-TEXT\";\r\nconst SET_USER_PROFILE = \"SET-USER-PROFILE\";\r\n\r\nexport type ProfileActionsTypes =\r\n    ReturnType<typeof addPostActionCreator>\r\n    | ReturnType<typeof updateNewPostTextActionCreator>\r\n    | ReturnType<typeof setUserProfile>\r\n\r\ntype initialStateType = typeof initialState\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, likeCount: 5, post: 'Hi! How are you?'},\r\n        {id: 2, likeCount: 15, post: 'I learn React!)))'},\r\n    ],\r\n    newPostText: '',\r\n    profile: null,\r\n}\r\n\r\n\r\nconst ProfileReducer = (state: any = initialState, action: AllActionsTypes): initialStateType => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                post: state.newPostText,\r\n                likeCount: 0\r\n            }\r\n            return {\r\n                ...state,\r\n                posts: [newPost, ...state.posts,],\r\n                newPostText: ''\r\n            }\r\n        }\r\n        case UPDATE_NEW_POST_TEXT:\r\n            return {\r\n                ...state,\r\n                newPostText: action.newText\r\n            }\r\n        case SET_USER_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n\r\n        default:\r\n            return state\r\n\r\n    }\r\n}\r\n\r\nexport const addPostActionCreator = () => ({\r\n        type: ADD_POST\r\n    } as const\r\n)\r\n\r\nexport const updateNewPostTextActionCreator = (newText: string) => {\r\n    return {\r\n        type: UPDATE_NEW_POST_TEXT,\r\n        newText\r\n    } as const\r\n}\r\nexport const setUserProfile = (profile: string) => {\r\n    return {\r\n        type: SET_USER_PROFILE,\r\n        profile\r\n    } as const\r\n}\r\n\r\nexport const getProfilePage = (userId: number) => {\r\n    return (dispatch: any) => {\r\n        profileAPI.getProfile(userId)\r\n            .then(response => {\r\n                dispatch(setUserProfile(response.data))\r\n            })\r\n    }\r\n}\r\n\r\nexport default ProfileReducer\r\n\r\n","import {AllActionsTypes, dialogsPageType, messageDataType} from \"./state\";\r\n\r\nconst ADD_MESSAGE = \"ADD-MESSAGE\";\r\nconst UPDATE_NEW_MESSAGE_TEXT = \"UPDATE-NEW-MESSAGE-TEXT\";\r\n\r\nexport type DialogsActionsTypes =\r\n    ReturnType<typeof addMessageAC>\r\n    | ReturnType<typeof updateNewMessageTextAC>\r\n\r\nlet initialState = {\r\n    dialogsData: [\r\n        {id: 1, name: 'Katya'},\r\n        {id: 2, name: 'Sasha'},\r\n        {id: 3, name: 'Eva'},\r\n        {id: 4, name: 'Alisa'},\r\n        {id: 5, name: 'Ivan'},\r\n        {id: 6, name: 'Roma'},\r\n    ],\r\n    messageData: [\r\n        {id: 1, message: 'Hi'},\r\n        {id: 2, message: 'Hello'},\r\n        {id: 3, message: 'How are you?'},\r\n        {id: 4, message: 'Fine. And you?'},\r\n        {id: 5, message: 'Good. Thanks'}\r\n    ],\r\n    newMessageText: ''\r\n}\r\n\r\nconst DialogsReducer = (state: dialogsPageType = initialState, action: AllActionsTypes) => {\r\n    let stateCopy\r\n    switch (action.type) {\r\n        case ADD_MESSAGE:\r\n            stateCopy = {\r\n                ...state,\r\n                messageData: [...state.messageData, {\r\n                    id: 7,\r\n                    message: state.newMessageText\r\n                }],\r\n                newMessageText: ''\r\n            }\r\n            return stateCopy\r\n        case UPDATE_NEW_MESSAGE_TEXT:\r\n            stateCopy = {\r\n                ...state,\r\n                newMessageText: action.newMessage\r\n            }\r\n            return stateCopy\r\n        default:\r\n            return state\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const addMessageAC = () => ({\r\n        type: ADD_MESSAGE\r\n    } as const\r\n)\r\n\r\nexport const updateNewMessageTextAC = (newMessage: string) => ({\r\n        type: UPDATE_NEW_MESSAGE_TEXT,\r\n        newMessage: newMessage\r\n    } as const\r\n)\r\n\r\n\r\nexport default DialogsReducer","import {addPostActionCreator, setUserProfile, updateNewPostTextActionCreator} from \"./profile_reducer\";\r\nimport {usersAPI} from \"../api/api\";\r\n\r\nconst FOLLOW = 'FOLLOW'\r\nconst UNFOLLOW = 'UNFOLLOW'\r\nconst SET_USERS = 'SET_USERS'\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE'\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT'\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING'\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS'\r\n\r\n//TODO типизация\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 100,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: [],\r\n}\r\n\r\nexport type UsersActionsTypes =\r\n    ReturnType<typeof followSuccess>\r\n    | ReturnType<typeof unFollowSuccess>\r\n    | ReturnType<typeof setUsers>\r\n    | ReturnType<typeof setCurrentPages>\r\n    | ReturnType<typeof setTotalUsersCount>\r\n    | ReturnType<typeof toggleInFetching>\r\n    | ReturnType<typeof toggleIsFollowingProgress>\r\n\r\nconst UsersReducer = (state: any = initialState, action: UsersActionsTypes) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map((u: any) => {\r\n                    if (u.id === action.userID) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u\r\n                })\r\n            }\r\n\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map((u: any) => {\r\n                    if (u.id === action.userID) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u\r\n                })\r\n            }\r\n\r\n        case SET_USERS:\r\n            return {\r\n                ...state,\r\n                users: action.users\r\n            }\r\n        case SET_CURRENT_PAGE:\r\n            return {...state, currentPage: action.currentPage}\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return {...state, totalUsersCount: action.count}\r\n        case TOGGLE_IS_FETCHING:\r\n            return {...state, isFetching: action.isFetching}\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n            return {\r\n                ...state, followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userID]\r\n                    : state.followingInProgress.filter((id: number) => id !== action.userID)\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const followSuccess = (userID: number) => ({\r\n        type: FOLLOW,\r\n        userID\r\n    } as const\r\n)\r\n\r\nexport const unFollowSuccess = (userID: number) => ({\r\n        type: UNFOLLOW,\r\n        userID\r\n    } as const\r\n)\r\n\r\nexport const setUsers = (users: any) => ({\r\n        type: SET_USERS,\r\n        users\r\n    } as const\r\n)\r\nexport const setCurrentPages = (currentPage: number) => ({\r\n        type: SET_CURRENT_PAGE,\r\n        currentPage\r\n    } as const\r\n)\r\nexport const setTotalUsersCount = (totalUsersCount: number) => ({\r\n        type: SET_TOTAL_USERS_COUNT,\r\n        count: totalUsersCount\r\n    } as const\r\n)\r\nexport const toggleInFetching = (isFetching: boolean) => ({\r\n        type: TOGGLE_IS_FETCHING,\r\n        isFetching\r\n    } as const\r\n)\r\nexport const toggleIsFollowingProgress = (isFetching: boolean, userID: number) => ({\r\n        type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n        isFetching,\r\n        userID\r\n    } as const\r\n)\r\n\r\nexport const getUsers = (currentValue: number, pageSize: number) => {\r\n    return (dispatch: any) => {\r\n        dispatch(toggleInFetching(true))\r\n        usersAPI.getUsers(currentValue, pageSize).then(data => {\r\n            dispatch(toggleInFetching(false))\r\n            dispatch(setUsers(data.items))\r\n            dispatch(setTotalUsersCount(data.totalCount))\r\n        })\r\n    }\r\n}\r\n\r\nexport const unFollow = (userId: number) => {\r\n    return (dispatch: any) => {\r\n        dispatch(toggleIsFollowingProgress(true, userId))\r\n        usersAPI.unfollow(userId).then((response: any) => {\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(unFollowSuccess(userId))\r\n            }\r\n            dispatch(toggleIsFollowingProgress(false, userId))\r\n        })\r\n    }\r\n}\r\n\r\nexport const follow = (userId: number) => {\r\n    return (dispatch: any) => {\r\n        dispatch(toggleIsFollowingProgress(true, userId))\r\n        usersAPI.follow(userId).then((response: any) => {\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(followSuccess(userId))\r\n            }\r\n            dispatch(toggleIsFollowingProgress(false, userId))\r\n        })\r\n    }\r\n}\r\n\r\nexport default UsersReducer","import {authAPI, usersAPI} from \"../api/api\";\r\nimport {followSuccess, toggleIsFollowingProgress} from \"./users_reducer\";\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA'\r\n\r\n//TODO типизация\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n}\r\n\r\nconst AuthReducer = (state: any = initialState, action: any) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.data,\r\n                isAuth: true\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = (userId: number | null, email: string | null, login: string | null) => ({\r\n        type: SET_USER_DATA,\r\n        data: {userId, email, login}\r\n    }\r\n)\r\n\r\nexport const getAuthUserData = () => (dispatch: any) =>{\r\n    authAPI.me()\r\n        .then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                let {id, email, login} = response.data.data\r\n                dispatch(setAuthUserData(id, email, login))\r\n            }\r\n        })\r\n}\r\n\r\nexport default AuthReducer","import {createStore, combineReducers, applyMiddleware} from \"redux\"\r\nimport ProfileReducer from \"./profile_reducer\";\r\nimport DialogsReducer from \"./dialogs_reducer\";\r\nimport UsersReducer from \"./users_reducer\";\r\nimport AuthReducer from \"./auth_reducer\";\r\nimport thunkMiddleware from 'redux-thunk'\r\n\r\n//TODO спросить про типизацию!!!\r\n\r\nexport type reduxStoreType = ReturnType<typeof createStore>\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: ProfileReducer,\r\n    dialogsPage: DialogsReducer,\r\n    usersPage: UsersReducer,\r\n    auth: AuthReducer,\r\n})\r\n\r\nlet store: reduxStoreType = createStore(reducers, applyMiddleware(thunkMiddleware))\r\n// @ts-ignore\r\nwindow.store = store;\r\nexport default store","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst Navbar = () => {\r\n    return (\r\n            <div className={s.menuSidebar}>\r\n                <div className={s.user}>\r\n                    <img src={'https://static10.tgstat.ru/channels/_0/34/340648ab5ac20fe131ac165c13a6c5d5.jpg'} alt=\"avatar\" className={s.userAvatar}/>\r\n                        <span className={s.userName}>Alisa Grey</span>\r\n                </div>\r\n                <nav className={s.navGroup}>\r\n                        <NavLink to='/profile' className={s.navLink} activeClassName={s.active}>\r\n                            <span className={\"fas fa-home\"+' '+s.navIcon}/>\r\n                            <span className={s.navText}>Profile</span>\r\n                        </NavLink>\r\n                        <NavLink to='/dialogs' className={s.navLink} activeClassName={s.active}>\r\n                            <span className={\"fas fa-comment\"+' '+s.navIcon}/>\r\n                            <span className={s.navText}>Messages</span>\r\n                        </NavLink>\r\n                        <NavLink to='/users' className={s.navLink} activeClassName={s.active}>\r\n                            <span className={\"fas fa-user-friends\"+' '+s.navIcon}/>\r\n                            <span className={s.navText}>Users</span>\r\n                        </NavLink>\r\n                        <NavLink to='/news' className={s.navLink} activeClassName={s.active}>\r\n                            <span className={\"fas fa-newspaper\"+' '+s.navIcon}/>\r\n                            <span className={s.navText}>News</span>\r\n                        </NavLink>\r\n                        <NavLink to='/music' className={s.navLink} activeClassName={s.active}>\r\n                            <span className={\"fas fa-music\"+' '+s.navIcon}/>\r\n                            <span className={s.navText}>Music</span>\r\n                        </NavLink>\r\n                        <NavLink to='/settings' className={s.navLink} activeClassName={s.active}>\r\n                            <span className={\"fas fa-cogs\"+' '+s.navIcon}/>\r\n                            <span className={s.navText}>Settings</span>\r\n                        </NavLink>\r\n                </nav>\r\n            </div>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default Navbar;","import React from \"react\";\r\n\r\nexport const News = () => {\r\n    return (\r\n        <div>News</div>\r\n    )\r\n}","import React from \"react\";\r\n\r\nexport const Music = () => {\r\n    return (\r\n        <div>Music</div>\r\n    )\r\n}","import React from \"react\";\r\n\r\nexport const Settings = () => {\r\n    return (\r\n        <div>Settings</div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/ava.323d81be.jpg\";","import React, {ChangeEvent, FC} from \"react\";\r\nimport s from './Dialogs.module.css'\r\nimport {NavLink, Redirect} from \"react-router-dom\";\r\nimport avatar from './../../img/ava.jpg'\r\nimport {dialogsPageType} from \"../../redux/state\";\r\n\r\ntype DialogItemType = {\r\n    name: string\r\n    id: string\r\n}\r\ntype MessageType = {\r\n    message: string\r\n    id: string\r\n}\r\n\r\n//TODO верстка\r\n//TODO типизация\r\n\r\nexport const DialogItem = (props: DialogItemType) => {\r\n\r\n    let path = \"/dialogs/\" + props.id\r\n    return (\r\n        <div className={s.item}>\r\n            <div className=\"img\">\r\n                <NavLink to={path}><img src={'https://miro.medium.com/max/720/1*W35QUSvGpcLuxPo3SRTH4w.png'} alt='avatar' className={s.storyItem}/></NavLink>\r\n            </div>\r\n            <div className=\"text\">\r\n                <NavLink className={s.storyItem} to={path}>{props.name}</NavLink>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nconst Message = (props: MessageType) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <div className=\"img\">\r\n                <img src={avatar} alt='avatar'/>\r\n            </div>\r\n            <div className={s.text}>\r\n                <div className={s.message}>{props.message}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\ninterface Dialogs {\r\n    updateNewMessage: (text: string) => void\r\n    addMessage: () => void\r\n    dialogsPage: dialogsPageType\r\n    newMessageText: string\r\n}\r\n\r\nconst Dialogs: FC<any> = (props) => {\r\n\r\n    let state = props.dialogsPage\r\n    let dialogsElements = state.dialogsData.map((names: any) =>\r\n        <DialogItem id={names.id.toString()} name={names.name} key={names.id}/>\r\n    )\r\n\r\n    let messageElements = state.messageData.map((messages: any) =>\r\n        <Message id={messages.id.toString()} message={messages.message} key={messages.id}/>\r\n    )\r\n\r\n\r\n    let addMessage = () => {\r\n        props.addMessage()\r\n    }\r\n\r\n    let onMessageChange = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n        let text = e.currentTarget.value\r\n        props.updateNewMessage(text)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={s.content}>\r\n            <div className={s.dialog_wrapper}>\r\n                <div className={s.messages_items}>\r\n                    {messageElements}\r\n                    <div className={s.add}>\r\n                        <textarea className={s.textarea} onChange={onMessageChange} value={props.newMessageText}/>\r\n                        <button className={\"far fa-paper-plane\" + \" \" + s.addMessageBtn} onClick={addMessage}/>\r\n                    </div>\r\n                </div>\r\n                <div className={s.dialog_items}>\r\n                    <h4 className={s.storiesTitle}>Friends</h4>\r\n                    {dialogsElements}\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Dialogs","import React from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nlet mapStateToPropsForRedirect = (state: any) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\nexport const withAuthRedirect = (Component: any) => {\r\n    class RedirectComponent extends React.Component<any, any> {\r\n        render() {\r\n            if(!this.props.isAuth) return <Redirect to={'/login'}/>\r\n\r\n            return <Component {...this.props}/>;\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n\r\n    return ConnectedAuthRedirectComponent\r\n};\r\n\r\n","import React from \"react\";\r\nimport {addMessageAC, updateNewMessageTextAC,} from \"../../redux/dialogs_reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../HOC/WithAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n//TODO типизация\r\n\r\nlet mapStateToProps = (state: any) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n        newMessageText: state.dialogsPage.newMessageText,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch: any) => {\r\n    return {\r\n        updateNewMessage: (text: string) => {\r\n            dispatch(updateNewMessageTextAC(text))\r\n\r\n        },\r\n        addMessage: () => {\r\n            dispatch(addMessageAC())\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs)","export default __webpack_public_path__ + \"static/media/user.a634a2f6.png\";","import React from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport s from './Users.module.css'\r\nimport userPhoto from './../../assets/user.png'\r\nimport {usersAPI} from '../../api/api';\r\nimport {toggleIsFollowingProgress} from \"../../redux/users_reducer\";\r\n\r\nconst Users = (props: any) => {\r\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize)\r\n\r\n    let pages = []\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n    return (\r\n        <div className={s.user}>\r\n            <div className={s.paginationBlock}>\r\n                {pages.map((p: number) => {\r\n                    return <span className={props.currentPage === p ? s.active : s.page}\r\n                                 onClick={(e) => {\r\n                                     props.onPageChanged(p)\r\n                                 }}>{p}</span>\r\n                })}\r\n            </div>\r\n            {\r\n                props.users.map((u: any) => <div key={u.id} className={s.userBlock}>\r\n                    <div className={s.userInformation}>\r\n                        <NavLink to={'/profile/' + u.id}>\r\n                            <img className={s.userPhoto} src={u.photos.small !== null ? u.photos.small : userPhoto}\r\n                                 alt={'user avatar'}/>\r\n                        </NavLink>\r\n                        <div>\r\n                            {u.followed\r\n                                    ? <button\r\n                                        disabled={props.followingInProgress.\r\n                                        some((id: number) => id === u.id)} /*className={s.followButton}*/\r\n                                        onClick={() => {\r\n                                            props.unfollow(u.id)                                        }}><i className={'fas fa-user-times '+ ' ' + s.followIcon}/>Unfollow</button>\r\n                                    : <button\r\n                                        disabled={props.followingInProgress.some((id: number) => id === u.id)} /*className={s.followButton}*/\r\n                                        onClick={() => {\r\n                                            props.follow(u.id)\r\n                                        }}><i className={\"fas fa-user-plus\" + ' ' + s.followIcon}/>Follow</button>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    <div className={s.userDescription}>\r\n                        <span><b>{u.name}</b></span>\r\n                        <span><i>{u.status}</i></span>\r\n                        <span>{'u.location.city'}</span>\r\n                        <span>{'u.location.country'}</span>\r\n                    </div>\r\n                </div>)\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Users;","import React from 'react';\r\nimport s from './Preloader.module.css'\r\n\r\nconst Preloader = () => {\r\n    return (\r\n        <div className={s.loader}>\r\n            <div className={s.l_main}>\r\n                <div className={s.l_square}><span></span><span></span><span></span></div>\r\n                <div className={s.l_square}><span></span><span></span><span></span></div>\r\n                <div className={s.l_square}><span></span><span></span><span></span></div>\r\n                <div className={s.l_square}><span></span><span></span><span></span></div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Preloader;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {\r\n    follow,\r\n    getUsers,\r\n    setCurrentPages,\r\n    toggleIsFollowingProgress, unFollow,\r\n} from \"../../redux/users_reducer\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {compose} from \"redux\";\r\nimport {withAuthRedirect} from \"../../HOC/WithAuthRedirect\";\r\n\r\n//TODO сделать типизацию\r\n\r\nclass UsersContainer extends React.Component<any, any> {\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.currentValue, this.props.pageSize)\r\n    }\r\n\r\n    onPageChanged = (pageNumber: number) => {\r\n        this.props.getUsers(pageNumber)\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                   pageSize={this.props.pageSize}\r\n                   currentPage={this.props.currentPage}\r\n                   onPageChanged={this.onPageChanged}\r\n                   users={this.props.users}\r\n                   follow={this.props.follow}\r\n                   unfollow={this.props.unFollow}\r\n                   toggleIsFollowingProgress={this.props.toggleIsFollowingProgress}\r\n                   followingInProgress={this.props.followingInProgress}\r\n            />\r\n        </>\r\n\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state: any) => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n        followingInProgress: state.usersPage.followingInProgress\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    withAuthRedirect,\r\n    connect(mapStateToProps, {\r\n        follow,\r\n        unFollow,\r\n        setCurrentPages,\r\n        toggleIsFollowingProgress,\r\n        getUsers\r\n    })\r\n)(UsersContainer)\r\n","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../../common/Preloader/Preloader\";\r\n\r\nconst ProfileInfo = (props: any) => {\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n    return <div className={s.mainFeed}>\r\n        <div className={s.descriptionBlock}>\r\n            <img className={s.profileImage}\r\n                 src={props.profile.photos.large}/>\r\n            <div className={s.description}>\r\n                <span className={s.descriptionTextName}><b>{props.profile.fullName}</b></span>\r\n                <span className={s.descriptionText}><b>About me:</b> <i>{props.profile.aboutMe}</i></span>\r\n                <span\r\n                    className={s.descriptionText}><b>Looking for a job:</b>{props.profile.lookingForAJob ? 'yes' : 'no'}</span>\r\n                <span\r\n                    className={s.descriptionText}><b>Looking for a job description:</b>{props.profile.lookingForAJobDescription}</span>\r\n                <span className={s.descriptionText}><b>Contacts:</b></span>\r\n                <span className={s.descriptionTextContacts}><b><i\r\n                    className=\"fab fa-facebook-f\">:</i></b>{props.profile.contacts.facebook ? props.profile.contacts.facebook : 'not specified'}</span>\r\n                <span className={s.descriptionTextContacts}><b><i\r\n                    className=\"fab fa-linkedin\">:</i></b>{props.profile.contacts.website ? props.profile.contacts.website : 'not specified'}</span>\r\n                <span className={s.descriptionTextContacts}><b><i\r\n                    className=\"fab fa-vk\">:</i></b>{props.profile.contacts.vk ? props.profile.contacts.vk : 'not specified'}</span>\r\n                <span className={s.descriptionTextContacts}><b><i\r\n                    className=\"fab fa-twitter\">:</i></b>{props.profile.contacts.instagram ? props.profile.contacts.instagram : 'not specified'}</span>\r\n                <span className={s.descriptionTextContacts}><b><i\r\n                    className=\"fab fa-instagram\">:</i></b>{props.profile.contacts.instagram ? props.profile.contacts.instagram : 'not specified'}</span>\r\n                <span className={s.descriptionTextContacts}><b><i\r\n                    className=\"fab fa-youtube\">:</i></b>{props.profile.contacts.youtube ? props.profile.contacts.youtube : 'not specified'}</span>\r\n                <span className={s.descriptionTextContacts}><b><i\r\n                    className=\"fab fa-github\">:</i></b>{props.profile.contacts.github ? props.profile.contacts.github : 'not specified'}</span>\r\n                <span className={s.descriptionTextContacts}><b><i\r\n                    className=\"fas fa-link\">:</i></b>{props.profile.contacts.mainLink ? props.profile.contacts.mainLink : 'not specified'}</span>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\ntype MessageType = {\r\n    massage: string,\r\n    likeCount: number\r\n}\r\n\r\n//TODO сделать отступы между постами\r\n\r\nconst Post: React.FC<MessageType> = (props) => {\r\n    return (\r\n            <div className={s.post}>\r\n                <div className={s.postHeader}>\r\n                    <div className={s.user}>\r\n                        <img src={'https://static10.tgstat.ru/channels/_0/34/340648ab5ac20fe131ac165c13a6c5d5.jpg'}\r\n                             className={s.userAvatar}/>\r\n                        <div className={s.postInfo}>\r\n                            <a href=\"#\" className={s.postAuthor}>Alisa Grey</a>\r\n                            <div className={s.postTimeInfo}>\r\n                                <span className={s.postTime}>3 hrs</span>\r\n                                <span className={\"fas fa-cog\" + ' ' + s.settingIcon}/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <button className={'fas fa-ellipsis-h' + ' ' + s.postButton}/>\r\n                </div>\r\n                <div className={s.postContainer}>\r\n                    <p className={s.postText}>{props.massage}</p>\r\n                </div>\r\n                <div className={\"far fa-thumbs-up\"+' '+s.likes}>\r\n                    <span className={s.likesCounter}>{props.likeCount}</span>\r\n                </div>\r\n                <div className={s.postFooter}>\r\n                    <button className={s.postButton}><i className={\"far fa-thumbs-up\" + \" \"+ s.buttonIcon} />Like</button>\r\n                    <button className={s.postButton}><i className={\"far fa-comment\" + \" \"+ s.buttonIcon} />Comment</button>\r\n                    <button className={s.postButton}><i className={\"fas fa-share-alt\" + \" \"+ s.buttonIcon} />Share</button>\r\n                </div>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React, {ChangeEvent, FC} from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from \"./Post/Post\";\r\nimport {postDataType} from \"../../../redux/state\";\r\n\r\ntype MyPostType = {\r\n    addPost: () => void\r\n    updateNewPostText: (newPostText: string) => void\r\n    posts: Array<postDataType>\r\n    newPostText: string\r\n}\r\n\r\n//TODO сделать отступы между постами нормально\r\n\r\nconst MyPosts: FC<MyPostType> = (props) => {\r\n    let postElements = props.posts.map(post => <Post massage={post.post} likeCount={post.likeCount}/>)\r\n\r\n    let onAddPost = () => {\r\n        props.addPost()\r\n    }\r\n\r\n    let onPostChange = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n\r\n        let newPostText = e.currentTarget.value\r\n        props.updateNewPostText(newPostText)\r\n    }\r\n\r\n    return (\r\n        <div className={s.createPost}>\r\n            <div className={s.createPostHeader}>\r\n                <h4 className={s.createPostTitle}>\r\n                    Create Post\r\n                </h4>\r\n            </div>\r\n\r\n            <div className={s.createPostBody}>\r\n\r\n                <div className={s.createPostInput}>\r\n                    <textarea className={s.createPostTextarea} onChange={onPostChange} value={props.newPostText}/>\r\n                </div>\r\n                <div className={s.createPostFooter}>\r\n                    <button className={s.tag} onClick={onAddPost}>\r\n                        <i className={\"fas fa-location-arrow\"+' '+s.tagIcon}/>\r\n                        Add post</button>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                {postElements}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPostActionCreator, updateNewPostTextActionCreator} from \"../../../redux/profile_reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n//TODO типизация\r\n\r\nlet mapStateToProps = (state: any) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch: any) => {\r\n    return {\r\n        addPost: () => {\r\n            dispatch(addPostActionCreator())\r\n        },\r\n        updateNewPostText: (newPostText: string) => {\r\n            dispatch(updateNewPostTextActionCreator(newPostText))\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer;\r\n\r\n","import React from 'react';\r\nimport s from './Profile.module.css';\r\nimport ProfileInfo from \"./My posts/ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./My posts/MyPostsContainer\"\r\n\r\n\r\nconst Profile = (props: any) => {\r\n    return (\r\n        <div className={s.mainFeed}>\r\n            <ProfileInfo profile={props.profile} />\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile","import React from 'react';\r\nimport Profile from './Profile';\r\nimport {connect} from \"react-redux\";\r\nimport {getProfilePage} from \"../../redux/profile_reducer\";\r\nimport {Redirect, withRouter} from 'react-router-dom';\r\nimport {withAuthRedirect} from \"../../HOC/WithAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component<any, any> {\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId\r\n        if (!userId) {\r\n            userId = 2\r\n        }\r\n        this.props.getProfilePage(userId)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props} profile={this.props.profile}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state: any) => ({\r\n    profile: state.profilePage.profile,\r\n})\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, {getProfilePage}),\r\n    withRouter,\r\n    withAuthRedirect,\r\n)(ProfileContainer)\r\n\r\n","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport s from './Header.module.css';\r\n\r\n\r\n//TODO сделать иконки на панели навигации\r\nexport const Header = (props: any) => {\r\n\r\n    return (\r\n        <header className={s.header}>\r\n            <form className={s.searchForm}>\r\n                <input className={s.searchInput} type=\"text\" placeholder=\"Search\"/>\r\n                <button className={\"fas fa-search\" + \" \" + s.searchButton} type=\"submit\"/>\r\n            </form>\r\n            <nav className={s.navigation}>\r\n                <div className={s.user}>\r\n                    <img src={'https://static10.tgstat.ru/channels/_0/34/340648ab5ac20fe131ac165c13a6c5d5.jpg'}\r\n                         alt=\"avatar\" className={s.userAvatar}/>\r\n                    {props.isAuth ?\r\n                        <span className={s.userName}>{props.login}</span> : <NavLink to={'/login'}>Login</NavLink>}\r\n                </div>\r\n            </nav>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;\r\n\r\n","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {getAuthUserData} from \"../../redux/auth_reducer\";\r\n\r\nclass HeaderContainer extends React.Component<any, any> {\r\n    componentDidMount() {\r\n        this.props.getAuthUserData()\r\n    }\r\n\r\n    render() {\r\n        return <Header {...this.props} />\r\n    }\r\n\r\n\r\n}\r\ndebugger\r\nconst mapStateToProps = (state: any) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n})\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, {getAuthUserData})(HeaderContainer);","import React from 'react';\r\n\r\nconst Login = () => {\r\n    return (\r\n        <div>\r\n            Login\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;","import React from 'react'\r\nimport './App.css';\r\nimport Navbar from \"./components/Navbar/Navbar\";\r\nimport {Route} from \"react-router-dom\"\r\nimport {News} from \"./components/News/News\";\r\nimport {Music} from \"./components/Music/Music\";\r\nimport {Settings} from \"./components/Settings/Settings\";\r\nimport '@fortawesome/fontawesome-free/css/all.min.css'\r\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\r\nimport UsersContainer from './components/Users/UsersContainer';\r\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport Login from \"./components/Login/Login\";\r\n\r\n/*\r\nexport type AppType = {\r\n    store: reduxStoreType\r\n    dispatch: (action: AllActionsTypes) => void\r\n}\r\n*/\r\nconst App = () => {\r\n\r\n    return (\r\n        <div>\r\n            <HeaderContainer/>\r\n            <div className='container'>\r\n                <Navbar/>\r\n                <Route path='/profile/:userId?' render={() => <ProfileContainer/>}/>\r\n                <Route path='/dialogs' render={() => <DialogsContainer/>}/>\r\n                <Route path='/users' render={() => <UsersContainer/>}/>\r\n                <Route path='/login' render={() => <Login/>}/>\r\n                <Route path='/news' render={() => <News/>}/>\r\n                <Route path='/music' render={() => <Music/>}/>\r\n                <Route path='/settings' render={() => <Settings/>}/>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default App;","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport './index.css';\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport store from \"./redux/redux_store\";\r\nimport '@fortawesome/fontawesome-free/css/all.min.css'\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {Provider} from \"react-redux\";\r\n\r\nconst rerenderEntireTree = () => {\r\n    ReactDOM.render(\r\n        <React.StrictMode>\r\n            <BrowserRouter>\r\n                <Provider store={store}>\r\n                    <App />\r\n                </Provider>\r\n            </BrowserRouter>\r\n        </React.StrictMode>,\r\n        document.getElementById('root')\r\n    );\r\n}\r\n\r\n\r\nstore.subscribe(() => {\r\n    rerenderEntireTree()\r\n})\r\nrerenderEntireTree()\r\n\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals()\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog_wrapper\":\"Dialogs_dialog_wrapper__18qzq\",\"item\":\"Dialogs_item__CkiF2\",\"storiesTitle\":\"Dialogs_storiesTitle__3Sak_\",\"storyItem\":\"Dialogs_storyItem__1sMA2\",\"text\":\"Dialogs_text__2-lm7\",\"messages_items\":\"Dialogs_messages_items__2r-rv\",\"dialog_items\":\"Dialogs_dialog_items__B9GSs\",\"addMessageBtn\":\"Dialogs_addMessageBtn__O8IZd\",\"textarea\":\"Dialogs_textarea__177Ze\",\"add\":\"Dialogs_add__1VVLj\"};"],"sourceRoot":""}