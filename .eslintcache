[{"D:\\it-incubator\\social_net\\social_net\\src\\redux\\dialogs_reducer.ts":"1","D:\\it-incubator\\social_net\\social_net\\src\\redux\\profile_reducer.ts":"2","D:\\it-incubator\\social_net\\social_net\\src\\components\\Dialogs\\DialogsContainer.tsx":"3","D:\\it-incubator\\social_net\\social_net\\src\\components\\Users\\Users.tsx":"4","D:\\it-incubator\\social_net\\social_net\\src\\components\\Navbar\\Navbar.tsx":"5","D:\\it-incubator\\social_net\\social_net\\src\\components\\Users\\UsersContainer.tsx":"6","D:\\it-incubator\\social_net\\social_net\\src\\redux\\users_reducer.ts":"7","D:\\it-incubator\\social_net\\social_net\\src\\redux\\redux_store.ts":"8","D:\\it-incubator\\social_net\\social_net\\src\\reportWebVitals.ts":"9","D:\\it-incubator\\social_net\\social_net\\src\\components\\Header\\Header.tsx":"10","D:\\it-incubator\\social_net\\social_net\\src\\components\\Profile\\My posts\\ProfileInfo\\ProfileInfo.tsx":"11","D:\\it-incubator\\social_net\\social_net\\src\\App.tsx":"12","D:\\it-incubator\\social_net\\social_net\\src\\components\\Profile\\Profile.tsx":"13","D:\\it-incubator\\social_net\\social_net\\src\\components\\Profile\\My posts\\Post\\Post.tsx":"14","D:\\it-incubator\\social_net\\social_net\\src\\components\\Profile\\My posts\\MyPosts.tsx":"15","D:\\it-incubator\\social_net\\social_net\\src\\components\\Profile\\My posts\\MyPostsContainer.tsx":"16","D:\\it-incubator\\social_net\\social_net\\src\\components\\Dialogs\\Dialogs.tsx":"17","D:\\it-incubator\\social_net\\social_net\\src\\components\\News\\News.tsx":"18","D:\\it-incubator\\social_net\\social_net\\src\\components\\common\\Preloader\\Preloader.tsx":"19","D:\\it-incubator\\social_net\\social_net\\src\\components\\Profile\\ProfileContainer.tsx":"20"},{"size":1826,"mtime":1611230603100,"results":"21","hashOfConfig":"22"},{"size":1846,"mtime":1612531872506,"results":"23","hashOfConfig":"22"},{"size":775,"mtime":1611232024107,"results":"24","hashOfConfig":"22"},{"size":2222,"mtime":1612536395615,"results":"25","hashOfConfig":"22"},{"size":2319,"mtime":1611350088358,"results":"26","hashOfConfig":"22"},{"size":3096,"mtime":1612387735615,"results":"27","hashOfConfig":"22"},{"size":2390,"mtime":1612374861533,"results":"28","hashOfConfig":"22"},{"size":526,"mtime":1612459961797,"results":"29","hashOfConfig":"22"},{"size":425,"mtime":1606230262764,"results":"30","hashOfConfig":"22"},{"size":873,"mtime":1611350049316,"results":"31","hashOfConfig":"22"},{"size":2873,"mtime":1612543021661,"results":"32","hashOfConfig":"22"},{"size":1378,"mtime":1612553231625,"results":"33","hashOfConfig":"22"},{"size":418,"mtime":1612535991122,"results":"34","hashOfConfig":"22"},{"size":1947,"mtime":1611397320623,"results":"35","hashOfConfig":"22"},{"size":1696,"mtime":1611398047860,"results":"36","hashOfConfig":"22"},{"size":803,"mtime":1611388049453,"results":"37","hashOfConfig":"22"},{"size":2839,"mtime":1611424063854,"results":"38","hashOfConfig":"22"},{"size":106,"mtime":1606455449645,"results":"39","hashOfConfig":"22"},{"size":626,"mtime":1612383293123,"results":"40","hashOfConfig":"22"},{"size":1014,"mtime":1612553270695,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"tueoxu",{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"55"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"64"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"51"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\it-incubator\\social_net\\social_net\\src\\redux\\dialogs_reducer.ts",["93"],"D:\\it-incubator\\social_net\\social_net\\src\\redux\\profile_reducer.ts",["94"],"D:\\it-incubator\\social_net\\social_net\\src\\components\\Dialogs\\DialogsContainer.tsx",["95","96"],"D:\\it-incubator\\social_net\\social_net\\src\\components\\Users\\Users.tsx",["97","98","99"],"import React from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport s from './Users.module.css'\r\nimport userPhoto from './../../assets/user.png'\r\n\r\nconst Users = (props:any) => {\r\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize)\r\n\r\n    let pages = []\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n    return (\r\n        <div className={s.user}>\r\n            <div className={s.paginationBlock}>\r\n                {pages.map((p: number) => {\r\n                    return <span className={props.currentPage === p ?  s.active : s.page }\r\n                                 onClick={(e)=>{props.onPageChanged(p)}}>{p}</span>\r\n                })}\r\n            </div>\r\n            {\r\n                props.users.map((u: any) => <div key={u.id} className={s.userBlock}>\r\n                    <div className={s.userInformation}>\r\n                        <NavLink to={'/profile/'+u.id}>\r\n                            <img className={s.userPhoto} src={u.photos.small !== null ? u.photos.small : userPhoto}/>\r\n                        </NavLink>\r\n                        <div>\r\n                            {\r\n                                u.followed\r\n                                    ? <button className={s.followButton} onClick={() => {\r\n                                        props.unfollow(u.id)\r\n                                    }}><i className={\"fas fa-user-times\" + ' ' + s.followIcon}/>Unfollow</button>\r\n                                    : <button className={s.followButton} onClick={() => {\r\n                                        props.follow(u.id)\r\n                                    }}><i className={\"fas fa-user-plus\" + ' ' + s.followIcon}/>Follow</button>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    <div className={s.userDescription}>\r\n                        <span><b>{u.name}</b></span>\r\n                        <span><i>{u.status}</i></span>\r\n                        <span>{'u.location.city'}</span>\r\n                        <span>{'u.location.country'}</span>\r\n                    </div>\r\n                </div>)\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Users;",["100","101"],"D:\\it-incubator\\social_net\\social_net\\src\\components\\Navbar\\Navbar.tsx",["102","103","104","105","106","107"],"import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst Navbar = () => {\r\n    return (\r\n            <div className={s.menuSidebar}>\r\n                <div className={s.user}>\r\n                    <img src={'https://static10.tgstat.ru/channels/_0/34/340648ab5ac20fe131ac165c13a6c5d5.jpg'} alt=\"avatar\" className={s.userAvatar}/>\r\n                        <span className={s.userName}>Alisa Grey</span>\r\n                </div>\r\n                <nav className={s.navGroup}>\r\n                        <NavLink to='/profile' className={s.navLink} activeClassName={s.active}>\r\n                            <span className={\"fas fa-home\"+' '+s.navIcon}/>\r\n                            <span className={s.navText}>Profile</span>\r\n                        </NavLink>\r\n                        <NavLink to='/dialogs' className={s.navLink} activeClassName={s.active}>\r\n                            <span className={\"fas fa-comment\"+' '+s.navIcon}/>\r\n                            <span className={s.navText}>Messages</span>\r\n                        </NavLink>\r\n                        <NavLink to='/users' className={s.navLink} activeClassName={s.active}>\r\n                            <span className={\"fas fa-user-friends\"+' '+s.navIcon}/>\r\n                            <span className={s.navText}>Users</span>\r\n                        </NavLink>\r\n                        <NavLink to='/news' className={s.navLink} activeClassName={s.active}>\r\n                            <span className={\"fas fa-newspaper\"+' '+s.navIcon}/>\r\n                            <span className={s.navText}>News</span>\r\n                        </NavLink>\r\n                        <NavLink to='/music' className={s.navLink} activeClassName={s.active}>\r\n                            <span className={\"fas fa-music\"+' '+s.navIcon}/>\r\n                            <span className={s.navText}>Music</span>\r\n                        </NavLink>\r\n                        <NavLink to='/settings' className={s.navLink} activeClassName={s.active}>\r\n                            <span className={\"fas fa-cogs\"+' '+s.navIcon}/>\r\n                            <span className={s.navText}>Settings</span>\r\n                        </NavLink>\r\n                </nav>\r\n            </div>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default Navbar;",["108","109"],"D:\\it-incubator\\social_net\\social_net\\src\\components\\Users\\UsersContainer.tsx",[],"D:\\it-incubator\\social_net\\social_net\\src\\redux\\users_reducer.ts",[],"D:\\it-incubator\\social_net\\social_net\\src\\redux\\redux_store.ts",[],"D:\\it-incubator\\social_net\\social_net\\src\\reportWebVitals.ts",[],["110","111"],"D:\\it-incubator\\social_net\\social_net\\src\\components\\Header\\Header.tsx",["112"],"import React from 'react';\r\nimport s from './Header.module.css';\r\n\r\n\r\n//TODO сделать иконки на панели навигации\r\nexport const Header = () => {\r\n    return (\r\n        <header className={s.header}>\r\n            <form className={s.searchForm}>\r\n                <input className={s.searchInput} type=\"text\" placeholder=\"Search\"/>\r\n                <button className={\"fas fa-search\" + \" \" + s.searchButton} type=\"submit\"/>\r\n            </form>\r\n            <nav className={s.navigation}>\r\n                <div className={s.user}>\r\n                    <img src={'https://static10.tgstat.ru/channels/_0/34/340648ab5ac20fe131ac165c13a6c5d5.jpg'} alt=\"avatar\" className={s.userAvatar}/>\r\n                    <span className={s.userName}>Alisa</span>\r\n                </div>\r\n            </nav>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;\r\n\r\n","D:\\it-incubator\\social_net\\social_net\\src\\components\\Profile\\My posts\\ProfileInfo\\ProfileInfo.tsx",["113"],"import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../../common/Preloader/Preloader\";\r\n\r\nconst ProfileInfo = (props: any) => {\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n    debugger\r\n    return <div className={s.mainFeed}>\r\n        <div className={s.descriptionBlock}>\r\n            <img className={s.profileImage}\r\n                 src={props.profile.photos.large}/>\r\n            <div className={s.description}>\r\n                <span className={s.descriptionTextName}><b>{props.profile.fullName}</b></span>\r\n                <span className={s.descriptionText}><b>About me:</b> <i>{props.profile.aboutMe}</i></span>\r\n                <span\r\n                    className={s.descriptionText}><b>Looking for a job:</b>{props.profile.lookingForAJob ? 'yes' : 'no'}</span>\r\n                <span\r\n                    className={s.descriptionText}><b>Looking for a job description:</b>{props.profile.lookingForAJobDescription}</span>\r\n                <span className={s.descriptionText}><b>Contacts:</b></span>\r\n                <span className={s.descriptionTextContacts}><b><i\r\n                    className=\"fab fa-facebook-f\">:</i></b>{props.profile.contacts.facebook ? props.profile.contacts.facebook : 'not specified'}</span>\r\n                <span className={s.descriptionTextContacts}><b><i\r\n                    className=\"fab fa-linkedin\">:</i></b>{props.profile.contacts.website ? props.profile.contacts.website : 'not specified'}</span>\r\n                <span className={s.descriptionTextContacts}><b><i\r\n                    className=\"fab fa-vk\">:</i></b>{props.profile.contacts.vk ? props.profile.contacts.vk : 'not specified'}</span>\r\n                <span className={s.descriptionTextContacts}><b><i\r\n                    className=\"fab fa-twitter\">:</i></b>{props.profile.contacts.instagram ? props.profile.contacts.instagram : 'not specified'}</span>\r\n                <span className={s.descriptionTextContacts}><b><i\r\n                    className=\"fab fa-instagram\">:</i></b>{props.profile.contacts.instagram ? props.profile.contacts.instagram : 'not specified'}</span>\r\n                <span className={s.descriptionTextContacts}><b><i\r\n                    className=\"fab fa-youtube\">:</i></b>{props.profile.contacts.youtube ? props.profile.contacts.youtube : 'not specified'}</span>\r\n                <span className={s.descriptionTextContacts}><b><i\r\n                    className=\"fab fa-github\">:</i></b>{props.profile.contacts.github ? props.profile.contacts.github : 'not specified'}</span>\r\n                <span className={s.descriptionTextContacts}><b><i\r\n                    className=\"fas fa-link\">:</i></b>{props.profile.contacts.mainLink ? props.profile.contacts.mainLink : 'not specified'}</span>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n}\r\n\r\nexport default ProfileInfo;","D:\\it-incubator\\social_net\\social_net\\src\\App.tsx",["114"],"D:\\it-incubator\\social_net\\social_net\\src\\components\\Profile\\Profile.tsx",[],"D:\\it-incubator\\social_net\\social_net\\src\\components\\Profile\\My posts\\Post\\Post.tsx",["115","116","117","118","119","120","121","122"],"import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\ntype MessageType = {\r\n    massage: string,\r\n    likeCount: number\r\n}\r\n\r\n//TODO сделать отступы между постами\r\n\r\nconst Post: React.FC<MessageType> = (props) => {\r\n    return (\r\n            <div className={s.post}>\r\n                <div className={s.postHeader}>\r\n                    <div className={s.user}>\r\n                        <img src={'https://static10.tgstat.ru/channels/_0/34/340648ab5ac20fe131ac165c13a6c5d5.jpg'}\r\n                             className={s.userAvatar}/>\r\n                        <div className={s.postInfo}>\r\n                            <a href=\"#\" className={s.postAuthor}>Alisa Grey</a>\r\n                            <div className={s.postTimeInfo}>\r\n                                <span className={s.postTime}>3 hrs</span>\r\n                                <span className={\"fas fa-cog\" + ' ' + s.settingIcon}/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <button className={'fas fa-ellipsis-h' + ' ' + s.postButton}/>\r\n                </div>\r\n                <div className={s.postContainer}>\r\n                    <p className={s.postText}>{props.massage}</p>\r\n                </div>\r\n                <div className={\"far fa-thumbs-up\"+' '+s.likes}>\r\n                    <span className={s.likesCounter}>{props.likeCount}</span>\r\n                </div>\r\n                <div className={s.postFooter}>\r\n                    <button className={s.postButton}><i className={\"far fa-thumbs-up\" + \" \"+ s.buttonIcon} />Like</button>\r\n                    <button className={s.postButton}><i className={\"far fa-comment\" + \" \"+ s.buttonIcon} />Comment</button>\r\n                    <button className={s.postButton}><i className={\"fas fa-share-alt\" + \" \"+ s.buttonIcon} />Share</button>\r\n                </div>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default Post;","D:\\it-incubator\\social_net\\social_net\\src\\components\\Profile\\My posts\\MyPosts.tsx",["123"],"D:\\it-incubator\\social_net\\social_net\\src\\components\\Profile\\My posts\\MyPostsContainer.tsx",["124"],"import React from 'react';\r\nimport {addPostActionCreator, updateNewPostTextActionCreator} from \"../../../redux/profile_reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n//TODO типизация\r\n\r\nlet mapStateToProps = (state: any) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch: any) => {\r\n    return {\r\n        addPost: () => {\r\n            dispatch(addPostActionCreator())\r\n        },\r\n        updateNewPostText: (newPostText: string) => {\r\n            dispatch(updateNewPostTextActionCreator(newPostText))\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer;\r\n\r\n","D:\\it-incubator\\social_net\\social_net\\src\\components\\Dialogs\\Dialogs.tsx",["125","126"],"import React, {ChangeEvent, FC} from \"react\";\r\nimport s from './Dialogs.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport avatar from './../../img/ava.jpg'\r\nimport {dialogsPageType} from \"../../redux/state\";\r\n\r\ntype DialogItemType = {\r\n    name: string\r\n    id: string\r\n}\r\ntype MessageType = {\r\n    message: string\r\n    id: string\r\n}\r\n\r\n//TODO верстка\r\n//TODO типизация\r\n\r\nexport const DialogItem = (props: DialogItemType) => {\r\n\r\n    let path = \"/dialogs/\" + props.id\r\n    return (\r\n        <div className={s.item}>\r\n            <div className=\"img\">\r\n                <NavLink to={path}><img src={'https://miro.medium.com/max/720/1*W35QUSvGpcLuxPo3SRTH4w.png'} alt='avatar' className={s.storyItem}/></NavLink>\r\n            </div>\r\n            <div className=\"text\">\r\n                <NavLink className={s.storyItem} to={path}>{props.name}</NavLink>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nconst Message = (props: MessageType) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <div className=\"img\">\r\n                <img src={avatar} alt='avatar'/>\r\n            </div>\r\n            <div className={s.text}>\r\n                <div className={s.message}>{props.message}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\ninterface Dialogs {\r\n    updateNewMessage: (text: string) => void\r\n    addMessage: () => void\r\n    dialogsPage: dialogsPageType\r\n    newMessageText: string\r\n}\r\n\r\nconst Dialogs: FC<any> = (props) => {\r\n\r\n    let state = props.dialogsPage\r\n\r\n    let dialogsElements = state.dialogsData.map((names: any) =>\r\n        <DialogItem id={names.id.toString()} name={names.name} key={names.id}/>\r\n    )\r\n\r\n    let messageElements = state.messageData.map((messages: any) =>\r\n        <Message id={messages.id.toString()} message={messages.message} key={messages.id}/>\r\n    )\r\n\r\n\r\n    let addMessage = () => {\r\n        props.addMessage()\r\n    }\r\n\r\n    let onMessageChange = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n        let text = e.currentTarget.value\r\n        props.updateNewMessage(text)\r\n    }\r\n\r\n    return (\r\n        <div className={s.content}>\r\n            <div className={s.dialog_wrapper}>\r\n                <div className={s.messages_items}>\r\n                    {messageElements}\r\n                    <div className={s.add}>\r\n                        <textarea className={s.textarea} onChange={onMessageChange} value={props.newMessageText}/>\r\n                        <button className={\"far fa-paper-plane\" + \" \" + s.addMessageBtn} onClick={addMessage}/>\r\n                    </div>\r\n                </div>\r\n                <div className={s.dialog_items}>\r\n                    <h4 className={s.storiesTitle}>Friends</h4>\r\n                    {dialogsElements}\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Dialogs","D:\\it-incubator\\social_net\\social_net\\src\\components\\News\\News.tsx",[],"D:\\it-incubator\\social_net\\social_net\\src\\components\\common\\Preloader\\Preloader.tsx",[],["127","128"],"D:\\it-incubator\\social_net\\social_net\\src\\components\\Profile\\ProfileContainer.tsx",[],{"ruleId":"129","severity":1,"message":"130","line":1,"column":43,"nodeType":"131","messageId":"132","endLine":1,"endColumn":58},{"ruleId":"129","severity":1,"message":"133","line":1,"column":26,"nodeType":"131","messageId":"132","endLine":1,"endColumn":41},{"ruleId":"129","severity":1,"message":"134","line":1,"column":8,"nodeType":"131","messageId":"132","endLine":1,"endColumn":13},{"ruleId":"129","severity":1,"message":"135","line":1,"column":16,"nodeType":"131","messageId":"132","endLine":1,"endColumn":18},{"ruleId":"136","severity":1,"message":"137","line":25,"column":29,"nodeType":"138","endLine":25,"endColumn":118},{"ruleId":"139","severity":1,"message":"140","line":32,"column":74,"nodeType":"141","messageId":"142","endLine":32,"endColumn":75},{"ruleId":"139","severity":1,"message":"140","line":35,"column":73,"nodeType":"141","messageId":"142","endLine":35,"endColumn":74},{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","replacedBy":"146"},{"ruleId":"139","severity":1,"message":"140","line":15,"column":59,"nodeType":"141","messageId":"142","endLine":15,"endColumn":60},{"ruleId":"139","severity":1,"message":"140","line":19,"column":62,"nodeType":"141","messageId":"142","endLine":19,"endColumn":63},{"ruleId":"139","severity":1,"message":"140","line":23,"column":67,"nodeType":"141","messageId":"142","endLine":23,"endColumn":68},{"ruleId":"139","severity":1,"message":"140","line":27,"column":64,"nodeType":"141","messageId":"142","endLine":27,"endColumn":65},{"ruleId":"139","severity":1,"message":"140","line":31,"column":60,"nodeType":"141","messageId":"142","endLine":31,"endColumn":61},{"ruleId":"139","severity":1,"message":"140","line":35,"column":59,"nodeType":"141","messageId":"142","endLine":35,"endColumn":60},{"ruleId":"143","replacedBy":"147"},{"ruleId":"145","replacedBy":"148"},{"ruleId":"143","replacedBy":"149"},{"ruleId":"145","replacedBy":"150"},{"ruleId":"139","severity":1,"message":"140","line":11,"column":52,"nodeType":"141","messageId":"142","endLine":11,"endColumn":53},{"ruleId":"136","severity":1,"message":"137","line":12,"column":13,"nodeType":"138","endLine":13,"endColumn":52},{"ruleId":"129","severity":1,"message":"151","line":5,"column":8,"nodeType":"131","messageId":"132","endLine":5,"endColumn":15},{"ruleId":"136","severity":1,"message":"137","line":16,"column":25,"nodeType":"138","endLine":17,"endColumn":56},{"ruleId":"152","severity":1,"message":"153","line":19,"column":29,"nodeType":"138","endLine":19,"endColumn":66},{"ruleId":"139","severity":1,"message":"140","line":22,"column":63,"nodeType":"141","messageId":"142","endLine":22,"endColumn":64},{"ruleId":"139","severity":1,"message":"140","line":26,"column":60,"nodeType":"141","messageId":"142","endLine":26,"endColumn":61},{"ruleId":"139","severity":1,"message":"140","line":31,"column":51,"nodeType":"141","messageId":"142","endLine":31,"endColumn":52},{"ruleId":"139","severity":1,"message":"140","line":35,"column":87,"nodeType":"141","messageId":"142","endLine":35,"endColumn":88},{"ruleId":"139","severity":1,"message":"140","line":36,"column":85,"nodeType":"141","messageId":"142","endLine":36,"endColumn":86},{"ruleId":"139","severity":1,"message":"140","line":37,"column":87,"nodeType":"141","messageId":"142","endLine":37,"endColumn":88},{"ruleId":"139","severity":1,"message":"140","line":43,"column":62,"nodeType":"141","messageId":"142","endLine":43,"endColumn":63},{"ruleId":"129","severity":1,"message":"134","line":1,"column":8,"nodeType":"131","messageId":"132","endLine":1,"endColumn":13},{"ruleId":"154","severity":1,"message":"155","line":54,"column":7,"nodeType":"131","messageId":"156","endLine":54,"endColumn":23},{"ruleId":"139","severity":1,"message":"140","line":83,"column":65,"nodeType":"141","messageId":"142","endLine":83,"endColumn":66},{"ruleId":"143","replacedBy":"157"},{"ruleId":"145","replacedBy":"158"},"@typescript-eslint/no-unused-vars","'messageDataType' is defined but never used.","Identifier","unusedVar","'profilePageType' is defined but never used.","'React' is defined but never used.","'FC' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","no-native-reassign",["159"],"no-negated-in-lhs",["160"],["159"],["160"],["159"],["160"],"'Profile' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","@typescript-eslint/no-redeclare","'Dialogs' is already defined.","redeclared",["159"],["160"],"no-global-assign","no-unsafe-negation"]